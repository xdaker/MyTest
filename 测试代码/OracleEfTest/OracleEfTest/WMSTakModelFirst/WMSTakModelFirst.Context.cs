//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using OracleEfTest.WMSTakModelFirst;

namespace OracleEfTest.WMSTakModelFirst
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_WMS_TAKEntities : DbContext
    {
        public DB_WMS_TAKEntities()
            : base("name=WMSTakModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            //modelBuilder.HasDefaultSchema("WMS");
        }
    
        public virtual DbSet<Base_BackupJob> Base_BackupJob { get; set; }
        public virtual DbSet<Base_Button> Base_Button { get; set; }
        public virtual DbSet<Base_ButtonPermission> Base_ButtonPermission { get; set; }
        public virtual DbSet<Base_CodeRule> Base_CodeRule { get; set; }
        public virtual DbSet<Base_CodeRuleDetail> Base_CodeRuleDetail { get; set; }
        public virtual DbSet<Base_CodeRuleSerious> Base_CodeRuleSerious { get; set; }
        public virtual DbSet<Base_Company> Base_Company { get; set; }
        public virtual DbSet<Base_DataDictionary> Base_DataDictionary { get; set; }
        public virtual DbSet<Base_DataDictionaryDetail> Base_DataDictionaryDetail { get; set; }
        public virtual DbSet<Base_DataScopePermission> Base_DataScopePermission { get; set; }
        public virtual DbSet<Base_Department> Base_Department { get; set; }
        public virtual DbSet<Base_Email> Base_Email { get; set; }
        public virtual DbSet<Base_EmailAccessory> Base_EmailAccessory { get; set; }
        public virtual DbSet<Base_EmailAddressee> Base_EmailAddressee { get; set; }
        public virtual DbSet<Base_EmailCategory> Base_EmailCategory { get; set; }
        public virtual DbSet<Base_Employee> Base_Employee { get; set; }
        public virtual DbSet<Base_ExcelImport> Base_ExcelImport { get; set; }
        public virtual DbSet<Base_ExcelImportDetail> Base_ExcelImportDetail { get; set; }
        public virtual DbSet<Base_FormAttribute> Base_FormAttribute { get; set; }
        public virtual DbSet<Base_FormAttributeValue> Base_FormAttributeValue { get; set; }
        public virtual DbSet<Base_GroupUser> Base_GroupUser { get; set; }
        public virtual DbSet<Base_InterfaceManage> Base_InterfaceManage { get; set; }
        public virtual DbSet<Base_InterfaceManageParameter> Base_InterfaceManageParameter { get; set; }
        public virtual DbSet<Base_Language> Base_Language { get; set; }
        public virtual DbSet<Base_Module> Base_Module { get; set; }
        public virtual DbSet<Base_ModulePermission> Base_ModulePermission { get; set; }
        public virtual DbSet<Base_NetworkFile> Base_NetworkFile { get; set; }
        public virtual DbSet<Base_NetworkFolder> Base_NetworkFolder { get; set; }
        public virtual DbSet<Base_ObjectUserRelation> Base_ObjectUserRelation { get; set; }
        public virtual DbSet<Base_PhoneNote> Base_PhoneNote { get; set; }
        public virtual DbSet<Base_Post> Base_Post { get; set; }
        public virtual DbSet<Base_ProvinceCity> Base_ProvinceCity { get; set; }
        public virtual DbSet<Base_QueryRecord> Base_QueryRecord { get; set; }
        public virtual DbSet<Base_Roles> Base_Roles { get; set; }
        public virtual DbSet<Base_Shortcuts> Base_Shortcuts { get; set; }
        public virtual DbSet<Base_SysLog> Base_SysLog { get; set; }
        public virtual DbSet<Base_SysLogDetail> Base_SysLogDetail { get; set; }
        public virtual DbSet<Base_User> Base_User { get; set; }
        public virtual DbSet<Base_View> Base_View { get; set; }
        public virtual DbSet<Base_ViewPermission> Base_ViewPermission { get; set; }
        public virtual DbSet<Base_ViewWhere> Base_ViewWhere { get; set; }
        public virtual DbSet<Base_ViewWherePermission> Base_ViewWherePermission { get; set; }
        public virtual DbSet<DB_Import_InPlanDetail> DB_Import_InPlanDetail { get; set; }
        public virtual DbSet<ModuleInfo> ModuleInfo { get; set; }
        public virtual DbSet<POOrder> POOrder { get; set; }
        public virtual DbSet<POOrderEntry> POOrderEntry { get; set; }
        public virtual DbSet<WMS_AllocationMain> WMS_AllocationMain { get; set; }
        public virtual DbSet<WMS_AllocationPlanDetail> WMS_AllocationPlanDetail { get; set; }
        public virtual DbSet<WMS_AllocationPlanMain> WMS_AllocationPlanMain { get; set; }
        public virtual DbSet<WMS_BHDetail> WMS_BHDetail { get; set; }
        public virtual DbSet<WMS_BHMain> WMS_BHMain { get; set; }
        public virtual DbSet<WMS_BHTemp> WMS_BHTemp { get; set; }
        public virtual DbSet<WMS_BillNumber> WMS_BillNumber { get; set; }
        public virtual DbSet<WMS_BusinessInfo> WMS_BusinessInfo { get; set; }
        public virtual DbSet<WMS_CarInfo> WMS_CarInfo { get; set; }
        public virtual DbSet<WMS_CheckDetail> WMS_CheckDetail { get; set; }
        public virtual DbSet<WMS_CheckMain> WMS_CheckMain { get; set; }
        public virtual DbSet<WMS_CheckPlanDetail> WMS_CheckPlanDetail { get; set; }
        public virtual DbSet<WMS_CheckPlanMain> WMS_CheckPlanMain { get; set; }
        public virtual DbSet<WMS_ChildBatchManage> WMS_ChildBatchManage { get; set; }
        public virtual DbSet<WMS_ContainerInfo> WMS_ContainerInfo { get; set; }
        public virtual DbSet<WMS_ContainerType> WMS_ContainerType { get; set; }
        public virtual DbSet<WMS_ExamineDetail> WMS_ExamineDetail { get; set; }
        public virtual DbSet<WMS_ExamineMain> WMS_ExamineMain { get; set; }
        public virtual DbSet<WMS_InDetail> WMS_InDetail { get; set; }
        public virtual DbSet<WMS_InMain> WMS_InMain { get; set; }
        public virtual DbSet<WMS_InOrderDetail> WMS_InOrderDetail { get; set; }
        public virtual DbSet<WMS_InOrderMain> WMS_InOrderMain { get; set; }
        public virtual DbSet<WMS_InOrderTemp> WMS_InOrderTemp { get; set; }
        public virtual DbSet<WMS_InPlanDetail> WMS_InPlanDetail { get; set; }
        public virtual DbSet<WMS_InPlanMain> WMS_InPlanMain { get; set; }
        public virtual DbSet<WMS_InPlanTemp> WMS_InPlanTemp { get; set; }
        public virtual DbSet<WMS_InTemp> WMS_InTemp { get; set; }
        public virtual DbSet<WMS_JXD> WMS_JXD { get; set; }
        public virtual DbSet<WMS_JXDMX> WMS_JXDMX { get; set; }
        public virtual DbSet<WMS_LaneStatus> WMS_LaneStatus { get; set; }
        public virtual DbSet<WMS_Location> WMS_Location { get; set; }
        public virtual DbSet<WMS_LocationContainerMap> WMS_LocationContainerMap { get; set; }
        public virtual DbSet<WMS_LocationFunction> WMS_LocationFunction { get; set; }
        public virtual DbSet<WMS_Materials> WMS_Materials { get; set; }
        public virtual DbSet<WMS_MaterialsBusinessMap> WMS_MaterialsBusinessMap { get; set; }
        public virtual DbSet<WMS_MaterialsLocationMap> WMS_MaterialsLocationMap { get; set; }
        public virtual DbSet<WMS_MaterialsSorts> WMS_MaterialsSorts { get; set; }
        public virtual DbSet<WMS_MaterialStorageArea> WMS_MaterialStorageArea { get; set; }
        public virtual DbSet<WMS_OutDetail> WMS_OutDetail { get; set; }
        public virtual DbSet<WMS_OutMain> WMS_OutMain { get; set; }
        public virtual DbSet<WMS_OutOrderDetail> WMS_OutOrderDetail { get; set; }
        public virtual DbSet<WMS_OutOrderMain> WMS_OutOrderMain { get; set; }
        public virtual DbSet<WMS_OutPlanDetail> WMS_OutPlanDetail { get; set; }
        public virtual DbSet<WMS_OutPlanMain> WMS_OutPlanMain { get; set; }
        public virtual DbSet<WMS_OutPlanTemp> WMS_OutPlanTemp { get; set; }
        public virtual DbSet<WMS_OutTask> WMS_OutTask { get; set; }
        public virtual DbSet<WMS_OutTaskBHDetail> WMS_OutTaskBHDetail { get; set; }
        public virtual DbSet<WMS_OutTaskBHMain> WMS_OutTaskBHMain { get; set; }
        public virtual DbSet<WMS_OutTaskJHDetail> WMS_OutTaskJHDetail { get; set; }
        public virtual DbSet<WMS_OutTaskJHMain> WMS_OutTaskJHMain { get; set; }
        public virtual DbSet<WMS_OutTaskZHDetail> WMS_OutTaskZHDetail { get; set; }
        public virtual DbSet<WMS_OutTaskZHMain> WMS_OutTaskZHMain { get; set; }
        public virtual DbSet<WMS_OutTemp> WMS_OutTemp { get; set; }
        public virtual DbSet<WMS_PackSpec> WMS_PackSpec { get; set; }
        public virtual DbSet<WMS_PrinthHstoryTable> WMS_PrinthHstoryTable { get; set; }
        public virtual DbSet<WMS_PrintTable> WMS_PrintTable { get; set; }
        public virtual DbSet<WMS_ProductBatch> WMS_ProductBatch { get; set; }
        public virtual DbSet<WMS_QualityCheck> WMS_QualityCheck { get; set; }
        public virtual DbSet<WMS_RebuildApplyDetail> WMS_RebuildApplyDetail { get; set; }
        public virtual DbSet<WMS_RebuildApplyMain> WMS_RebuildApplyMain { get; set; }
        public virtual DbSet<WMS_RebuildMain> WMS_RebuildMain { get; set; }
        public virtual DbSet<WMS_RebuildPlanDetail> WMS_RebuildPlanDetail { get; set; }
        public virtual DbSet<WMS_RebuildPlanMain> WMS_RebuildPlanMain { get; set; }
        public virtual DbSet<WMS_Stockpile> WMS_Stockpile { get; set; }
        public virtual DbSet<WMS_StorageArea> WMS_StorageArea { get; set; }
        public virtual DbSet<WMS_StorageAreaMaterialMap> WMS_StorageAreaMaterialMap { get; set; }
        public virtual DbSet<WMS_SupplierMaterialsStorageArea> WMS_SupplierMaterialsStorageArea { get; set; }
        public virtual DbSet<WMS_Tasks> WMS_Tasks { get; set; }
        public virtual DbSet<WMS_TasksMainTemp> WMS_TasksMainTemp { get; set; }
        public virtual DbSet<WMS_TasksTemp> WMS_TasksTemp { get; set; }
        public virtual DbSet<WMS_TasksType> WMS_TasksType { get; set; }
        public virtual DbSet<WMS_TaskTypePostMap> WMS_TaskTypePostMap { get; set; }
        public virtual DbSet<WMS_Transit> WMS_Transit { get; set; }
        public virtual DbSet<WMS_TransitMain> WMS_TransitMain { get; set; }
        public virtual DbSet<WMS_UnloadingPlace> WMS_UnloadingPlace { get; set; }
        public virtual DbSet<WMS_ZHDetail> WMS_ZHDetail { get; set; }
        public virtual DbSet<WMS_ZHMain> WMS_ZHMain { get; set; }
        public virtual DbSet<WMS_ZHTemp> WMS_ZHTemp { get; set; }
        public virtual DbSet<XPObjectType> XPObjectType { get; set; }
        public virtual DbSet<Base_Supplies> Base_Supplies { get; set; }
        public virtual DbSet<Table_location> Table_location { get; set; }
        //public virtual DbSet<View_AreaCode> View_AreaCode { get; set; }
        //public virtual DbSet<View_InDettail> View_InDettail { get; set; }
        //public virtual DbSet<View_Location> View_Location { get; set; }
        //public virtual DbSet<View_LocationFunctionCode> View_LocationFunctionCode { get; set; }
        //public virtual DbSet<View_OutDettail> View_OutDettail { get; set; }
        //public virtual DbSet<View_OutTaskJHDetai> View_OutTaskJHDetai { get; set; }
        //public virtual DbSet<View_OutTaskZHDetail> View_OutTaskZHDetail { get; set; }
        //public virtual DbSet<View_Transit> View_Transit { get; set; }
    
        [DbFunction("DB_WMS_TAKEntities", "SplitStr")]
        public virtual IQueryable<SplitStr_Result> SplitStr(string c, string split)
        {
            var cParameter = c != null ?
                new ObjectParameter("c", c) :
                new ObjectParameter("c", typeof(string));
    
            var splitParameter = split != null ?
                new ObjectParameter("split", split) :
                new ObjectParameter("split", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitStr_Result>("[DB_WMS_TAKEntities].[SplitStr](@c, @split)", cParameter, splitParameter);
        }
    
        public virtual int DELSTAOK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELSTAOK");
        }
    
        public virtual int Proc_AddContainerCode(string containerCode, string endContainerCode, string containerTypeId, Nullable<int> status, string remark, Nullable<System.DateTime> createDate, string createUserId, string createUserName)
        {
            var containerCodeParameter = containerCode != null ?
                new ObjectParameter("ContainerCode", containerCode) :
                new ObjectParameter("ContainerCode", typeof(string));
    
            var endContainerCodeParameter = endContainerCode != null ?
                new ObjectParameter("EndContainerCode", endContainerCode) :
                new ObjectParameter("EndContainerCode", typeof(string));
    
            var containerTypeIdParameter = containerTypeId != null ?
                new ObjectParameter("ContainerTypeId", containerTypeId) :
                new ObjectParameter("ContainerTypeId", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var createUserIdParameter = createUserId != null ?
                new ObjectParameter("CreateUserId", createUserId) :
                new ObjectParameter("CreateUserId", typeof(string));
    
            var createUserNameParameter = createUserName != null ?
                new ObjectParameter("CreateUserName", createUserName) :
                new ObjectParameter("CreateUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_AddContainerCode", containerCodeParameter, endContainerCodeParameter, containerTypeIdParameter, statusParameter, remarkParameter, createDateParameter, createUserIdParameter, createUserNameParameter);
        }
    
        public virtual int Proc_AddLocation(string storageAreaId, string warehouseCode, string areaCode, string locationTypeCode, string laneId, Nullable<int> laneCode, Nullable<int> row, Nullable<int> vertical, Nullable<int> layer, Nullable<int> openStatus, Nullable<int> taskTroubleStatus, Nullable<int> maximumSize, string remark, Nullable<System.DateTime> createDate, string createUserId, string createUserName)
        {
            var storageAreaIdParameter = storageAreaId != null ?
                new ObjectParameter("StorageAreaId", storageAreaId) :
                new ObjectParameter("StorageAreaId", typeof(string));
    
            var warehouseCodeParameter = warehouseCode != null ?
                new ObjectParameter("WarehouseCode", warehouseCode) :
                new ObjectParameter("WarehouseCode", typeof(string));
    
            var areaCodeParameter = areaCode != null ?
                new ObjectParameter("AreaCode", areaCode) :
                new ObjectParameter("AreaCode", typeof(string));
    
            var locationTypeCodeParameter = locationTypeCode != null ?
                new ObjectParameter("LocationTypeCode", locationTypeCode) :
                new ObjectParameter("LocationTypeCode", typeof(string));
    
            var laneIdParameter = laneId != null ?
                new ObjectParameter("LaneId", laneId) :
                new ObjectParameter("LaneId", typeof(string));
    
            var laneCodeParameter = laneCode.HasValue ?
                new ObjectParameter("LaneCode", laneCode) :
                new ObjectParameter("LaneCode", typeof(int));
    
            var rowParameter = row.HasValue ?
                new ObjectParameter("Row", row) :
                new ObjectParameter("Row", typeof(int));
    
            var verticalParameter = vertical.HasValue ?
                new ObjectParameter("Vertical", vertical) :
                new ObjectParameter("Vertical", typeof(int));
    
            var layerParameter = layer.HasValue ?
                new ObjectParameter("Layer", layer) :
                new ObjectParameter("Layer", typeof(int));
    
            var openStatusParameter = openStatus.HasValue ?
                new ObjectParameter("OpenStatus", openStatus) :
                new ObjectParameter("OpenStatus", typeof(int));
    
            var taskTroubleStatusParameter = taskTroubleStatus.HasValue ?
                new ObjectParameter("TaskTroubleStatus", taskTroubleStatus) :
                new ObjectParameter("TaskTroubleStatus", typeof(int));
    
            var maximumSizeParameter = maximumSize.HasValue ?
                new ObjectParameter("MaximumSize", maximumSize) :
                new ObjectParameter("MaximumSize", typeof(int));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var createUserIdParameter = createUserId != null ?
                new ObjectParameter("CreateUserId", createUserId) :
                new ObjectParameter("CreateUserId", typeof(string));
    
            var createUserNameParameter = createUserName != null ?
                new ObjectParameter("CreateUserName", createUserName) :
                new ObjectParameter("CreateUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_AddLocation", storageAreaIdParameter, warehouseCodeParameter, areaCodeParameter, locationTypeCodeParameter, laneIdParameter, laneCodeParameter, rowParameter, verticalParameter, layerParameter, openStatusParameter, taskTroubleStatusParameter, maximumSizeParameter, remarkParameter, createDateParameter, createUserIdParameter, createUserNameParameter);
        }
    
        public virtual int Proc_BackUpDataBase(string filePath, string dbName)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var dbNameParameter = dbName != null ?
                new ObjectParameter("DbName", dbName) :
                new ObjectParameter("DbName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_BackUpDataBase", filePathParameter, dbNameParameter);
        }
    
        public virtual int Proc_BuildInTask(string currentUserId, Nullable<int> taskType, string selectContainerCode)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var taskTypeParameter = taskType.HasValue ?
                new ObjectParameter("TaskType", taskType) :
                new ObjectParameter("TaskType", typeof(int));
    
            var selectContainerCodeParameter = selectContainerCode != null ?
                new ObjectParameter("SelectContainerCode", selectContainerCode) :
                new ObjectParameter("SelectContainerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_BuildInTask", currentUserIdParameter, taskTypeParameter, selectContainerCodeParameter);
        }
    
        public virtual int Proc_BuildInTask_GenernateLocation(string currentUserId, Nullable<int> taskType, string warehouseId, string selectContainerCode)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var taskTypeParameter = taskType.HasValue ?
                new ObjectParameter("TaskType", taskType) :
                new ObjectParameter("TaskType", typeof(int));
    
            var warehouseIdParameter = warehouseId != null ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(string));
    
            var selectContainerCodeParameter = selectContainerCode != null ?
                new ObjectParameter("SelectContainerCode", selectContainerCode) :
                new ObjectParameter("SelectContainerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_BuildInTask_GenernateLocation", currentUserIdParameter, taskTypeParameter, warehouseIdParameter, selectContainerCodeParameter);
        }
    
        public virtual int Proc_CreateBackJob(string serverName, string jobName, Nullable<int> dispatchType, string dbName, string filePath, Nullable<int> startTime)
        {
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            var jobNameParameter = jobName != null ?
                new ObjectParameter("JobName", jobName) :
                new ObjectParameter("JobName", typeof(string));
    
            var dispatchTypeParameter = dispatchType.HasValue ?
                new ObjectParameter("DispatchType", dispatchType) :
                new ObjectParameter("DispatchType", typeof(int));
    
            var dbNameParameter = dbName != null ?
                new ObjectParameter("DbName", dbName) :
                new ObjectParameter("DbName", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_CreateBackJob", serverNameParameter, jobNameParameter, dispatchTypeParameter, dbNameParameter, filePathParameter, startTimeParameter);
        }
    
        public virtual int Proc_CreateInPlan(string currentUserId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_CreateInPlan", currentUserIdParameter);
        }
    
        public virtual int Proc_CreateOutTask(string currentUserId, string outPlanDetailId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var outPlanDetailIdParameter = outPlanDetailId != null ?
                new ObjectParameter("OutPlanDetailId", outPlanDetailId) :
                new ObjectParameter("OutPlanDetailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_CreateOutTask", currentUserIdParameter, outPlanDetailIdParameter);
        }
    
        public virtual int Proc_CreateQualityCheck(string currentUserId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_CreateQualityCheck", currentUserIdParameter);
        }
    
        public virtual int Proc_DropJob(string jobName)
        {
            var jobNameParameter = jobName != null ?
                new ObjectParameter("JobName", jobName) :
                new ObjectParameter("JobName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_DropJob", jobNameParameter);
        }
    
        public virtual int Proc_ExecBH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecBH");
        }
    
        public virtual int Proc_ExecBHPlan(string materialsId, string supplierId)
        {
            var materialsIdParameter = materialsId != null ?
                new ObjectParameter("MaterialsId", materialsId) :
                new ObjectParameter("MaterialsId", typeof(string));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecBHPlan", materialsIdParameter, supplierIdParameter);
        }
    
        public virtual int Proc_ExecInOrder(string currentUserId, string supplierId, string inOrderCode, string remark)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var inOrderCodeParameter = inOrderCode != null ?
                new ObjectParameter("InOrderCode", inOrderCode) :
                new ObjectParameter("InOrderCode", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecInOrder", currentUserIdParameter, supplierIdParameter, inOrderCodeParameter, remarkParameter);
        }
    
        public virtual int Proc_ExecInPlan(string currentUserId, string supplierId, string deliveryId, string remark)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var deliveryIdParameter = deliveryId != null ?
                new ObjectParameter("DeliveryId", deliveryId) :
                new ObjectParameter("DeliveryId", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecInPlan", currentUserIdParameter, supplierIdParameter, deliveryIdParameter, remarkParameter);
        }
    
        public virtual int Proc_ExecOutOrder(string currentUserId, string outOrderId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var outOrderIdParameter = outOrderId != null ?
                new ObjectParameter("OutOrderId", outOrderId) :
                new ObjectParameter("OutOrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecOutOrder", currentUserIdParameter, outOrderIdParameter);
        }
    
        public virtual int Proc_ExecOutPlan(string currentUserId, string outPlanDetailId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var outPlanDetailIdParameter = outPlanDetailId != null ?
                new ObjectParameter("OutPlanDetailId", outPlanDetailId) :
                new ObjectParameter("OutPlanDetailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecOutPlan", currentUserIdParameter, outPlanDetailIdParameter);
        }
    
        public virtual int Proc_ExecOutPlanDetail(string currentUserId, string outPlanDetailId)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var outPlanDetailIdParameter = outPlanDetailId != null ?
                new ObjectParameter("OutPlanDetailId", outPlanDetailId) :
                new ObjectParameter("OutPlanDetailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecOutPlanDetail", currentUserIdParameter, outPlanDetailIdParameter);
        }
    
        public virtual int Proc_ExecOutPlanTemp(string currentUserId, string deliveryId, string remark)
        {
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var deliveryIdParameter = deliveryId != null ?
                new ObjectParameter("DeliveryId", deliveryId) :
                new ObjectParameter("DeliveryId", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_ExecOutPlanTemp", currentUserIdParameter, deliveryIdParameter, remarkParameter);
        }
    
        public virtual int Proc_GetEmptyLocation(string materialsId, string supplierId, string warehouseId, string locationFunctionCode)
        {
            var materialsIdParameter = materialsId != null ?
                new ObjectParameter("MaterialsId", materialsId) :
                new ObjectParameter("MaterialsId", typeof(string));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var warehouseIdParameter = warehouseId != null ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(string));
    
            var locationFunctionCodeParameter = locationFunctionCode != null ?
                new ObjectParameter("LocationFunctionCode", locationFunctionCode) :
                new ObjectParameter("LocationFunctionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_GetEmptyLocation", materialsIdParameter, supplierIdParameter, warehouseIdParameter, locationFunctionCodeParameter);
        }
    
        public virtual int Proc_GetEmptyLocation_One(string materialsId, string supplierId, string warehouseId, string locationFunctionCode, ObjectParameter locationId_Out)
        {
            var materialsIdParameter = materialsId != null ?
                new ObjectParameter("MaterialsId", materialsId) :
                new ObjectParameter("MaterialsId", typeof(string));
    
            var supplierIdParameter = supplierId != null ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(string));
    
            var warehouseIdParameter = warehouseId != null ?
                new ObjectParameter("WarehouseId", warehouseId) :
                new ObjectParameter("WarehouseId", typeof(string));
    
            var locationFunctionCodeParameter = locationFunctionCode != null ?
                new ObjectParameter("LocationFunctionCode", locationFunctionCode) :
                new ObjectParameter("LocationFunctionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_GetEmptyLocation_One", materialsIdParameter, supplierIdParameter, warehouseIdParameter, locationFunctionCodeParameter, locationId_Out);
        }
    
        public virtual int Proc_GetEmptyLocationPMK(string cKCode, string kQCode)
        {
            var cKCodeParameter = cKCode != null ?
                new ObjectParameter("CKCode", cKCode) :
                new ObjectParameter("CKCode", typeof(string));
    
            var kQCodeParameter = kQCode != null ?
                new ObjectParameter("KQCode", kQCode) :
                new ObjectParameter("KQCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_GetEmptyLocationPMK", cKCodeParameter, kQCodeParameter);
        }
    
        public virtual int PROC_MoveRec(string id, string type, string tableName)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_MoveRec", idParameter, typeParameter, tableNameParameter);
        }
    
        public virtual int Proc_QualityCheckComplete(string userId, string containerCode, Nullable<int> materialsAttribute, Nullable<decimal> inQuantity, Nullable<decimal> qualityCheckQuantity)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var containerCodeParameter = containerCode != null ?
                new ObjectParameter("containerCode", containerCode) :
                new ObjectParameter("containerCode", typeof(string));
    
            var materialsAttributeParameter = materialsAttribute.HasValue ?
                new ObjectParameter("materialsAttribute", materialsAttribute) :
                new ObjectParameter("materialsAttribute", typeof(int));
    
            var inQuantityParameter = inQuantity.HasValue ?
                new ObjectParameter("inQuantity", inQuantity) :
                new ObjectParameter("inQuantity", typeof(decimal));
    
            var qualityCheckQuantityParameter = qualityCheckQuantity.HasValue ?
                new ObjectParameter("QualityCheckQuantity", qualityCheckQuantity) :
                new ObjectParameter("QualityCheckQuantity", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_QualityCheckComplete", userIdParameter, containerCodeParameter, materialsAttributeParameter, inQuantityParameter, qualityCheckQuantityParameter);
        }
    
        public virtual int Proc_RunWebService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_RunWebService");
        }
    
        public virtual int Proc_SetTaskComplete(string taskTempCode, string currentUserId, string locationCode, string setType)
        {
            var taskTempCodeParameter = taskTempCode != null ?
                new ObjectParameter("TaskTempCode", taskTempCode) :
                new ObjectParameter("TaskTempCode", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var setTypeParameter = setType != null ?
                new ObjectParameter("SetType", setType) :
                new ObjectParameter("SetType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SetTaskComplete", taskTempCodeParameter, currentUserIdParameter, locationCodeParameter, setTypeParameter);
        }
    
        public virtual int SyncMaterials(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncMaterials", supplierCodeParameter);
        }
    
        public virtual int WMS_PrintTableLable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_PrintTableLable");
        }
    
        public virtual int WMS_Transit_Update(string containerCode, string locationCode, string currentUserId)
        {
            var containerCodeParameter = containerCode != null ?
                new ObjectParameter("ContainerCode", containerCode) :
                new ObjectParameter("ContainerCode", typeof(string));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_Transit_Update", containerCodeParameter, locationCodeParameter, currentUserIdParameter);
        }
    
        public virtual int WMS_TransitMain_Update(string containerCode, string locationCode, string areaCode)
        {
            var containerCodeParameter = containerCode != null ?
                new ObjectParameter("ContainerCode", containerCode) :
                new ObjectParameter("ContainerCode", typeof(string));
    
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            var areaCodeParameter = areaCode != null ?
                new ObjectParameter("AreaCode", areaCode) :
                new ObjectParameter("AreaCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WMS_TransitMain_Update", containerCodeParameter, locationCodeParameter, areaCodeParameter);
        }
    }
}
